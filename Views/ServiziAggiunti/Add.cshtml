@model Epicotel.Models.StoricoServiziAggiuntivi

@{
    ViewBag.Title = "Add";
}

<h2>Aggiungi Servizio alla prenotazione</h2>

@using (Html.BeginForm("Add", "ServiziAggiunti", FormMethod.Post, new { @class = "row g-3 needs-validation", novalidate = "true" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.IdPrenotazione, "Prenotazione", new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IdPrenotazione, new SelectList(ViewBag.Prenotazioni, "IdPrenotazione", "DataPrenotazione"), "Seleziona una prenotazione", new { @class = $"form-select {(ViewData.ModelState.IsValidField("IdPrenotazione") ? "" : "is-invalid")}" })
            @Html.ValidationMessageFor(model => model.IdPrenotazione, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdServizio, "Servizio", new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IdServizio, new SelectList(ViewBag.Servizi, "IdServizio", "TipoServizio"), "Seleziona un servizio", new { @class = $"form-select {(ViewData.ModelState.IsValidField("IdServizio") ? "" : "is-invalid")}" })
            @Html.ValidationMessageFor(model => model.IdServizio, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataServizio, new { htmlAttributes = new { @class = "form-label" } })
        @Html.EditorFor(model => model.DataServizio, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
        @Html.ValidationMessageFor(model => model.DataServizio, null, new { htmlAttributes = new { @class = "invalid-feedback" } })
    </div>



    <div class="col-12">
        <button class="btn btn-primary mt-3" type="submit">Aggiungi Prenotazione</button>
    </div>
}
